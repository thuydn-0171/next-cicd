# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build-and-test:
#     name: Build, Test, and Analyze
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.x, 20.x] # Next.js が要求する Node.js バージョンに変更

#     steps:
#       # コードをチェックアウト
#       - uses: actions/checkout@v4

#       # Node.js のセットアップ
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: 'npm'

#       # 依存関係のインストール
#       - name: Install dependencies
#         run: npm ci

#       # ビルド
#       - name: Build the project
#         run: npm run build --if-present

#       # テストの実行
#       - name: Run tests
#         run: npm test

#       # SonarQube スキャン
#       - name: SonarQube Scan
#         uses: SonarSource/sonarqube-scan-action@v4
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x] # Next.js が要求するバージョンに変更

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  sonarqube:
    name: SonarQube Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
